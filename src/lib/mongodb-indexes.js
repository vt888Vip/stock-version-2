// MongoDB indexes ƒë·ªÉ t·ªëi ∆∞u h√≥a t√¨m ki·∫øm ng∆∞·ªùi d√πng
// Ch·∫°y script n√†y m·ªôt l·∫ßn ƒë·ªÉ t·∫°o indexes

const { MongoClient } = require('mongodb');

async function createUserIndexes() {
  const client = new MongoClient(process.env.MONGODB_URI);
  
  try {
    await client.connect();
    const db = client.db();
    const usersCollection = db.collection('users');
    
    console.log('üîß Creating MongoDB indexes for users collection...');
    
    // Index cho t√¨m ki·∫øm theo username v√† email
    await usersCollection.createIndex(
      { username: 1, email: 1 },
      { 
        name: 'username_email_search',
        background: true 
      }
    );
    
    // Index cho t√¨m ki·∫øm text (username v√† email)
    await usersCollection.createIndex(
      { 
        username: 'text', 
        email: 'text' 
      },
      { 
        name: 'text_search',
        background: true,
        weights: { username: 10, email: 5 } // Username c√≥ tr·ªçng s·ªë cao h∆°n
      }
    );
    
    // Index cho role
    await usersCollection.createIndex(
      { role: 1 },
      { 
        name: 'role_filter',
        background: true 
      }
    );
    
    // Index cho status.active
    await usersCollection.createIndex(
      { 'status.active': 1 },
      { 
        name: 'status_active_filter',
        background: true 
      }
    );
    
    // Index cho createdAt (ƒë√£ c√≥ s·∫µn, nh∆∞ng ƒë·∫£m b·∫£o n√≥ t·ªìn t·∫°i)
    await usersCollection.createIndex(
      { createdAt: -1 },
      { 
        name: 'createdAt_desc',
        background: true 
      }
    );
    
    // Compound index cho c√°c filter th∆∞·ªùng d√πng
    await usersCollection.createIndex(
      { 
        role: 1, 
        'status.active': 1, 
        createdAt: -1 
      },
      { 
        name: 'role_status_createdAt',
        background: true 
      }
    );
    
    // Compound index cho search + filters
    await usersCollection.createIndex(
      { 
        username: 1, 
        role: 1, 
        'status.active': 1, 
        createdAt: -1 
      },
      { 
        name: 'search_filters',
        background: true 
      }
    );
    
    console.log('‚úÖ MongoDB indexes created successfully!');
    
    // Hi·ªÉn th·ªã danh s√°ch indexes
    const indexes = await usersCollection.listIndexes().toArray();
    console.log('\nüìã Current indexes:');
    indexes.forEach(index => {
      console.log(`  - ${index.name}: ${JSON.stringify(index.key)}`);
    });
    
  } catch (error) {
    console.error('‚ùå Error creating indexes:', error);
  } finally {
    await client.close();
  }
}

// Ch·∫°y n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  createUserIndexes();
}

module.exports = { createUserIndexes };
